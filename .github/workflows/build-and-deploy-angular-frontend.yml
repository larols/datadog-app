name: Build and Deploy Angular Frontend

on:
  push:
    branches:
      - main
    paths:
      - 'angular-frontend/**'
      - 'k8s/angular-deployment.yaml'
      - 'k8s/angular-service.yaml'
      - '.github/workflows/build-and-deploy-angular-frontend.yml'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    env:
      DD_BETA_COMMANDS_ENABLED: 1
      DD_SITE: datadoghq.eu
      DD_API_KEY: ${{ secrets.DD_API_KEY }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set version from commit SHA
      run: echo "VERSION=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

    - name: Install dependencies
      working-directory: ./angular-frontend
      run: npm ci

    - name: Build Angular App with Source Maps (for Datadog)
      working-directory: ./angular-frontend
      run: npm run build -- --configuration=production --source-map --output-path=../dist-github-actions

    - name: Upload Source Maps to Datadog
      env:
        DATADOG_API_KEY: ${{ secrets.DD_API_KEY }}
      run: |
        npx @datadog/datadog-ci sourcemaps upload dist-github-actions/angular-frontend/browser \
          --service=datadog-app-angular \
          --release-version=${{ env.VERSION }} \
          --minified-path-prefix=http://192.168.50.240/angular/

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image with Datadog build args
      run: |
        REPO_URL=$(git config --get remote.origin.url)
        COMMIT_SHA=$(git rev-parse HEAD)
        docker build -f angular-frontend/Dockerfile angular-frontend/ \
          -t ${{ secrets.DOCKER_USERNAME }}/angular-frontend:latest \
          --build-arg DD_GIT_REPOSITORY_URL="$REPO_URL" \
          --build-arg DD_GIT_COMMIT_SHA="$COMMIT_SHA" \
          --build-arg DD_VERSION=${{ env.VERSION }}

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/angular-frontend:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push
    timeout-minutes: 5

    env:
      DD_BETA_COMMANDS_ENABLED: 1
      DD_GITHUB_JOB_NAME: Deploy to k8s
      DD_SITE: datadoghq.eu
      DD_API_KEY: ${{ secrets.DD_API_KEY }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set deployment version
      run: echo "VERSION=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

    - name: Tag pipeline in Datadog
      run: npx @datadog/datadog-ci tag --level pipeline --tags team:datadog-app

    - name: Set deployment start time
      run: echo "deploy_start=$(date +%s)" >> $GITHUB_ENV

    - name: Configure kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 --decode > ~/.kube/config

    - name: Deploy Angular Frontend to Kubernetes
      run: |
        kubectl apply -f k8s/angular-deployment.yaml --insecure-skip-tls-verify
        kubectl apply -f k8s/angular-service.yaml --insecure-skip-tls-verify

    - name: Mark deployment in Datadog
      run: |
        npx @datadog/datadog-ci deployment mark \
          --env production --service datadog-app-angular \
          --revision "${{ github.sha }}"

    - name: Track deployment in Datadog
      run: |
        npx @datadog/datadog-ci dora deployment \
          --service datadog-app-angular \
          --env production \
          --started-at ${{ env.deploy_start }} \
          --finished-at $(date +%s) \
          --git-repository-url "${{ github.event.repository.html_url }}" \
          --git-commit-sha ${{ github.sha }}

    - name: Send deployment metrics to Datadog
      run: |
        npx @datadog/datadog-ci measure \
          --level pipeline \
          --measures "custom_error_rate:0.56" \
          --measures "custom_deploy_time:$(($(date +%s) - ${{ env.deploy_start }}))"
